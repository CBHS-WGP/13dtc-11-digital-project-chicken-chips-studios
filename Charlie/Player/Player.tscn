[gd_scene load_steps=22 format=3 uid="uid://461xqg54dhg2"]

[ext_resource type="Script" uid="uid://bthwkuo42uy6g" path="res://Charlie/Player/Camera_movement.gd" id="1_euoi1"]
[ext_resource type="Resource" uid="uid://dirky84hgvity" path="res://Charlie/Inventory/Player_Inventory.tres" id="1_ms5rm"]
[ext_resource type="PackedScene" uid="uid://cydmgo8i3qo0x" path="res://Charlie/Player/held_item.tscn" id="2_uiw4x"]
[ext_resource type="PackedScene" uid="uid://ggmokxxoct5u" path="res://Charlie/Inventory/inventory.tscn" id="4_7bwoj"]
[ext_resource type="Script" uid="uid://b0faeqfv21i0p" path="res://Charlie/Player/hud.gd" id="4_aqwou"]
[ext_resource type="PackedScene" uid="uid://u7d4ea0b411t" path="res://Charlie/UI/hud.tscn" id="5_7bwoj"]
[ext_resource type="PackedScene" uid="uid://b6hnwyuweh4nf" path="res://Charlie/UI/settings.tscn" id="7_g6nvv"]

[sub_resource type="GDScript" id="GDScript_yc2fa"]
script/source = "extends CharacterBody3D


var speed = 0.0
var MAX_SPEED = 5
var acceleration = 0.2
var MAX_BACK_SPEED = 3
const JUMP_VELOCITY = 3.5
var gravity = 9.81
var input_dir = Input.get_vector(\"A\", \"D\", \"W\", \"S\")
var direction = Vector3(0, 0, 0)	
@export var inv: Inv
var health = 100


func _ready():
	Global.shot.connect(healthdecrease)
	
func healthdecrease():
	health = health - 20
	print(\"TAKEDAMAMGE\")
	if health == 0:
		print(\"dead\")
		get_tree().change_scene_to_file(\"res://Charlie/UI/credits.tscn\")

func _physics_process(delta):
	#print(velocity)
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta
	# Handle jump.
	if Input.is_action_just_pressed(\"Space\") and is_on_floor() and Global.crouching == false:
		velocity.y = JUMP_VELOCITY
	if Input.is_action_just_pressed(\"Ctrl\"):
		if Global.crouching == false and $Collision_Player.is_playing() == false:
			Global.crouching = true
			$Collision_Player.play(\"Crouch\")
		elif Global.crouching == true and $Collision_Player.is_playing() == false and Global.current_areas == 0:
			$Collision_Player.play(\"Un_Crouch\")
			Global.crouching = false
	if Input.is_action_pressed(\"Shift\") and input_dir[0] <= 0.71 and input_dir[0] >= -0.71 and input_dir[1] > 0 and Global.crouching == false:
		#Variables for walking backwards
		acceleration = 0.2
		MAX_SPEED = 3.5
		walkandrun()
	elif Input.is_action_pressed(\"Shift\") and Global.crouching == false:
		#Varibles for running
		acceleration = 0.3
		MAX_SPEED = 8
		walkandrun()
	else:
		if input_dir[0] <= 0.71 and input_dir[0] >= -0.71 and input_dir[1] > 0 :
			if Global.crouching == true:
				acceleration = 0.03
				MAX_SPEED = 1
				walkandrun()
			else:
				acceleration = 0.075
				MAX_SPEED = 2
				walkandrun()
		else:
			if Global.crouching == true:
				acceleration = 0.075
				MAX_SPEED = 2
				walkandrun()
			else:
				#variables for regular walking
				acceleration = 0.15
				MAX_SPEED = 4.5
				walkandrun()
	

	move_and_slide()
	

func walkandrun():
	input_dir = Input.get_vector(\"A\", \"D\", \"W\", \"S\")
	direction = ($Camera.transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		#Speeds the player up to walking speed
		if speed <= MAX_SPEED:
			#velocity = velocity.move_toward(direction * speed, acceleration * 1.5)
			velocity.x = lerp(velocity.x, direction.normalized().x * speed, acceleration)
			velocity.z = lerp(velocity.z, direction.normalized().z * speed, acceleration)
			speed = speed + acceleration
			#velocity.x = direction.x * speed
			#velocity.z = direction.z * speed
		#if the player stops sprinting, return value to walking pace.
		if speed > MAX_SPEED:
			speed = speed - acceleration
			velocity.x = lerp(velocity.x, direction.normalized().x * speed, acceleration * 1.5)
			velocity.z = lerp(velocity.z, direction.normalized().z * speed, acceleration * 1.5)
			#velocity.x = move_toward(velocity.x, 0, acceleration * 2)
			#velocity.z = move_toward(velocity.z, 0, acceleration * 2)
	else:
		if speed > 0:
			speed = speed - acceleration
			velocity.x = lerp(velocity.x, direction.normalized().x * speed, acceleration * 1.5)
			velocity.z = lerp(velocity.z, direction.normalized().z * speed, acceleration * 1.5)
			#velocity.x = move_toward(velocity.x, 0, acceleration * 2)
			#velocity.z = move_toward(velocity.z, 0, acceleration * 2)
			#Keeps player from sliding backwards
		else:
			speed = 0
			velocity.x = direction.x * speed
			velocity.z = direction.z * speed


#Functions that update if there are any objects above the players head!
func _on_crouch_toggle_allow_area_exited(area):
	if area.is_in_group(\"Ceiling\"):
		Global.current_areas = Global.current_areas - 1
func _on_crouch_toggle_allow_area_entered(area):
	if area.is_in_group(\"Ceiling\"):
		Global.current_areas = Global.current_areas + 1
"

[sub_resource type="BoxShape3D" id="BoxShape3D_ti5e3"]
size = Vector3(0.9, 0.9, 0.9)

[sub_resource type="SphereShape3D" id="SphereShape3D_ti5e3"]
radius = 0.35

[sub_resource type="SphereShape3D" id="SphereShape3D_socw1"]
radius = 0.35

[sub_resource type="CylinderShape3D" id="CylinderShape3D_ms5rm"]
height = 1.11
radius = 0.35

[sub_resource type="CapsuleMesh" id="CapsuleMesh_24ntd"]
radius = 0.35
height = 1.8

[sub_resource type="Animation" id="Animation_rn0aa"]
resource_name = "Close"
length = 0.4
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("HUD/Options_Box:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.366667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(640, 340), Vector2(640, 1000)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("HUD/Options_Box:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.333333),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}

[sub_resource type="Animation" id="Animation_o5tpb"]
resource_name = "Open"
length = 0.4
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("HUD/Options_Box:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.366667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(640, 1000), Vector2(640, 340)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("HUD/Options_Box:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.366667),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, true]
}

[sub_resource type="Animation" id="Animation_m73r6"]
resource_name = "RESET"
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("HUD/Options_Box:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(640, 1463)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("HUD/Options_Box:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_3x0hu"]
_data = {
&"Close": SubResource("Animation_rn0aa"),
&"Open": SubResource("Animation_o5tpb"),
&"RESET": SubResource("Animation_m73r6")
}

[sub_resource type="Animation" id="Animation_ti5e3"]
resource_name = "Crouch"
length = 0.6
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, -0.6, 0)]
}
tracks/1/type = "position_3d"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("TopBean")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = PackedFloat32Array(0, 1, 0, 1.5496, 0, 0.6, 1, 0, 0.99, 0)
tracks/2/type = "position_3d"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("MiddleBean")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = PackedFloat32Array(0, 1, 0, 1, 0, 0.6, 1, 0, 0.65, 0)
tracks/3/type = "position_3d"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("BottomBean")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = PackedFloat32Array(0, 1, 0, 0.45, 0, 0.6, 1, 0, 0.45, 0)
tracks/4/type = "scale_3d"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("MiddleBean")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = PackedFloat32Array(0, 1, 1, 1, 1, 0.5, 1, 0.01, 0.01, 0.01)

[sub_resource type="Animation" id="Animation_ms5rm"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/1/type = "position_3d"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("TopBean")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = PackedFloat32Array(0, 1, 0, 1.5496, 0)
tracks/2/type = "position_3d"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("MiddleBean")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = PackedFloat32Array(0, 1, 0, 1, 0)
tracks/3/type = "position_3d"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("BottomBean")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = PackedFloat32Array(0, 1, 0, 0.45, 0)

[sub_resource type="Animation" id="Animation_socw1"]
resource_name = "Un_Crouch"
length = 0.6
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(0, -0.6, 0), Vector3(0, 0, 0)]
}
tracks/1/type = "position_3d"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("TopBean")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = PackedFloat32Array(0, 1, 0, 0.9, 0, 0.3, 1, 0, 1.5496, 0)
tracks/2/type = "position_3d"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("BottomBean")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = PackedFloat32Array(0, 1, 0, 0.45, 0, 0.6, 1, 0, 0.45, 0)
tracks/3/type = "position_3d"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("MiddleBean")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = PackedFloat32Array(0, 1, 0, 0.65, 0, 0.6, 1, 0, 1, 0)
tracks/4/type = "scale_3d"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("MiddleBean")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = PackedFloat32Array(0, 1, 0.01, 0.01, 0.01, 0.5, 1, 1, 1, 1)

[sub_resource type="AnimationLibrary" id="AnimationLibrary_7bwoj"]
_data = {
&"Crouch": SubResource("Animation_ti5e3"),
&"RESET": SubResource("Animation_ms5rm"),
&"Un_Crouch": SubResource("Animation_socw1")
}

[node name="Wayne" type="CharacterBody3D"]
floor_max_angle = 0.523599
script = SubResource("GDScript_yc2fa")
inv = ExtResource("1_ms5rm")

[node name="Crouch_Toggle_Allow" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.89589, 0)
collision_layer = 8
collision_mask = 8

[node name="Box" type="CollisionShape3D" parent="Crouch_Toggle_Allow"]
shape = SubResource("BoxShape3D_ti5e3")

[node name="TopBean" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5496, 0)
shape = SubResource("SphereShape3D_ti5e3")

[node name="BottomBean" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.45, 0)
shape = SubResource("SphereShape3D_socw1")

[node name="MiddleBean" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("CylinderShape3D_ms5rm")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
visible = false
mesh = SubResource("CapsuleMesh_24ntd")
skeleton = NodePath("")

[node name="Camera" type="Node3D" parent="."]
script = ExtResource("1_euoi1")

[node name="Camera" type="Camera3D" parent="Camera"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.7, 0)

[node name="Arms" type="Node3D" parent="Camera/Camera"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, -0.35, -0.5)

[node name="Held Item" parent="Camera/Camera/Arms" instance=ExtResource("2_uiw4x")]

[node name="Pickup_Ray" type="Node3D" parent="Camera"]

[node name="Pickup" type="RayCast3D" parent="Camera/Pickup_Ray"]
collide_with_areas = true
collide_with_bodies = false

[node name="HUD" type="Control" parent="."]
layout_mode = 3
anchors_preset = 1
anchor_left = 1.0
anchor_right = 1.0
offset_left = -1280.0
offset_bottom = 720.0
grow_horizontal = 0
script = ExtResource("4_aqwou")

[node name="Settings animations" type="AnimationPlayer" parent="HUD"]
root_node = NodePath("../..")
libraries = {
&"": SubResource("AnimationLibrary_3x0hu")
}

[node name="Inventory" parent="HUD" instance=ExtResource("4_7bwoj")]
layout_mode = 1

[node name="HUD" parent="HUD" instance=ExtResource("5_7bwoj")]
layout_mode = 1

[node name="Options_Box" parent="HUD" instance=ExtResource("7_g6nvv")]
layout_mode = 1
offset_top = 1103.0
offset_bottom = 1143.0

[node name="Leave_Settings" type="Button" parent="HUD"]
layout_mode = 0
offset_left = 1379.0
offset_top = 211.0
offset_right = 1602.0
offset_bottom = 285.0
text = "Back"

[node name="Collision_Player" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_7bwoj")
}

[node name="Player_Animations" type="AnimationPlayer" parent="."]
root_node = NodePath("../Player_Bobbing")

[node name="Player_Bobbing" type="AnimationTree" parent="."]
root_node = NodePath(".")
anim_player = NodePath("../Player_Animations")

[node name="Damage_from_enemy" type="Area3D" parent="."]
collision_layer = 16
collision_mask = 16

[connection signal="area_entered" from="Crouch_Toggle_Allow" to="." method="_on_crouch_toggle_allow_area_entered"]
[connection signal="area_exited" from="Crouch_Toggle_Allow" to="." method="_on_crouch_toggle_allow_area_exited"]
