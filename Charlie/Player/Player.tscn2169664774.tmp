[gd_scene load_steps=6 format=3 uid="uid://461xqg54dhg2"]

[ext_resource type="Script" uid="uid://bthwkuo42uy6g" path="res://Charlie/Player/Camera_movement.gd" id="1_euoi1"]
[ext_resource type="PackedScene" uid="uid://cydmgo8i3qo0x" path="res://Charlie/Player/held_item.tscn" id="2_uiw4x"]

[sub_resource type="GDScript" id="GDScript_yc2fa"]
script/source = "extends CharacterBody3D


var speed = 0.0
var MAX_SPEED = 5
var acceleration = 0.2
var MAX_BACK_SPEED = 3
const JUMP_VELOCITY = 4.5
var gravity = 9.81 * 1.5
var input_dir = Input.get_vector(\"A\", \"D\", \"W\", \"S\")
var direction = Vector3(0, 0, 0)	
#@export var inv: Inv


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta
	# Handle jump.
	if Input.is_action_just_pressed(\"Space\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
	if Input.is_action_pressed(\"Shift\"):
		#Varibles for running
		acceleration = 0.5
		MAX_SPEED = 8
		walkandrun()
	else:
		if input_dir[0] <= 0.71 and input_dir[0] >= -0.71 and input_dir[1] > 0 :
			acceleration = 0.075
			MAX_SPEED = 2
			walkandrun()
		else:
			#variables for regular walking
			acceleration = 0.15
			MAX_SPEED = 4.5
			walkandrun()
	

	move_and_slide()

func walkandrun():
	input_dir = Input.get_vector(\"A\", \"D\", \"W\", \"S\")
	direction = ($Camera.transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	#print(input_dir)
	print(speed)
	#print(velocity)
	if direction == Vector3(0, 0, 1):
		if speed <= MAX_SPEED:
			speed = speed + acceleration
			velocity.x = direction.x * speed
			velocity.z = direction.z * speed
		if speed > MAX_SPEED:
			speed = MAX_SPEED
			velocity.x = direction.x * speed
			velocity.z = direction.z * speed
	
	elif direction:
		if speed <= MAX_SPEED:
			speed = speed + acceleration
			velocity.x = direction.x * speed
			velocity.z = direction.z * speed
		if speed > MAX_SPEED:
			speed = MAX_SPEED
			velocity.x = direction.x * speed
			velocity.z = direction.z * speed
	else:
		if speed > 0:
			speed = speed - acceleration
			#velocity.x = move_toward(velocity.x, 0, speed)
			#velocity.z = move_toward(velocity.z, 0, speed)
			velocity.x = move_toward(velocity.x, speed, MAX_SPEED)
			velocity.z = move_toward(velocity.z, speed, MAX_SPEED)
		else:
			speed = 0
			velocity.x = direction.x * speed
			velocity.z = direction.z * speed
		#speed = 0
		#velocity.x = move_toward(velocity.x, 0, MAX_SPEED)
		#velocity.z = move_toward(velocity.z, 0, MAX_SPEED)
		#Try adding if S is used, make speed slower
		#ease (floatx ,0.4)
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_24ntd"]
radius = 0.35
height = 1.8

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_abxn7"]
radius = 0.35
height = 1.8

[node name="Wayne" type="CharacterBody3D"]
floor_max_angle = 0.523599
script = SubResource("GDScript_yc2fa")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
mesh = SubResource("CapsuleMesh_24ntd")
skeleton = NodePath("../CollisionShape3D")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("CapsuleShape3D_abxn7")

[node name="Camera" type="Node3D" parent="."]
script = ExtResource("1_euoi1")

[node name="Camera" type="Camera3D" parent="Camera"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.68, 0)

[node name="Arms" type="Node3D" parent="Camera/Camera"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, -0.35, -0.5)

[node name="Held Item" parent="Camera/Camera/Arms" instance=ExtResource("2_uiw4x")]

[node name="Pickup_Ray" type="Node3D" parent="Camera"]

[node name="Pickup" type="RayCast3D" parent="Camera/Pickup_Ray"]
collide_with_areas = true
collide_with_bodies = false

[node name="HUD" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0
